---
import FormButton from './ui/FormButton.astro';
import FormInput from './ui/FormInput.astro';
import FormTextarea from './ui/FormTextarea.astro';
import Modal from './Modal.astro';
---

<article class="flex w-full flex-col items-center justify-center gap-4 px-4 md:px-0 lg:w-1/2">
  <div
    class="border-primary shadow-primary shadow-xs relative h-full w-full max-w-[500px] rounded-2xl border p-5"
  >
    <header class="pb-8">
      <h3 class="text-primary text-2xl font-medium">Envíanos tu mensaje</h3>
    </header>

    <form id="contact-form" class="relative flex flex-col gap-6">
      <main class="flex flex-col gap-5">
        <div class="flex flex-col gap-5 md:flex-row md:gap-2">
          <FormInput
            id="name"
            name="name"
            label="Nombres"
            required={true}
            class="w-full md:w-3/5"
          />
          <FormInput
            id="phone"
            name="phone"
            label="Teléfono"
            type="tel"
            required={false}
            class="w-full md:w-2/5"
          />
        </div>

        <FormInput id="email" name="email" label="Email" type="email" required={true} />

        <FormTextarea id="message" name="message" label="Mensaje" required={true} />
      </main>

      <footer class="flex w-full flex-col items-center justify-center gap-8">
        <!-- Widget de Turnstile -->
        <div id="turnstile-widget" class="flex items-center justify-center"></div>

        <FormButton
          id="submit-btn"
          type="submit"
          class="w-full max-w-[250px]"
          text="Enviar mensaje"
        />
      </footer>
    </form>
  </div>
</article>

<Modal />

<script>
  import { ContactFormManager } from '../lib/contact-form-manager';

  // ✅ Lazy loading del contacto form usando Intersection Observer
  document.addEventListener('astro:page-load', () => {
    const contactSection = document.querySelector('#contact-form');
    if (!contactSection) return;

    // ✅ Usar Intersection Observer para cargar el script cuando la sección sea visible
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          try {
            // Inicializar el formulario cuando sea visible usando la nueva clase
            new ContactFormManager('#contact-form');
          } catch (error) {
            console.error('Error inicializando formulario de contacto:', error);
          }
          // Desconectar el observer después de la primera carga
          observer.disconnect();
        }
      });
    }, {
      // Trigger cuando esté 50% visible o 200px antes de ser visible
      threshold: 0.1,
      rootMargin: '200px 0px'
    });

    observer.observe(contactSection);

    // ✅ Fallback: Si después de 3 segundos no se ha cargado, cargarlo anyway
    setTimeout(() => {
      if (contactSection.querySelector('input')) return; // Ya se inicializó
      try {
        new ContactFormManager('#contact-form');
      } catch (error) {
        console.error('Error en fallback del formulario de contacto:', error);
      }
      observer.disconnect();
    }, 3000);
  });
</script>
